@Library('pipeline-library') _
pipeline {
    agent {
        node {
            label "dev_mesos_large_v2"
        }
    }

    environment {
        CREDENTIALS_ID  = "GENESYSCLOUD_OAUTHCLIENT_ID_AND_SECRET"
        GOPATH = "$HOME/go"
        TF_LOG = "DEBUG"
        TF_LOG_PATH = "../test.log"
		GENESYSCLOUD_REGION = "us-east-1"
        GENESYSCLOUD_SDK_DEBUG =  "true"
        GENESYSCLOUD_TOKEN_POOL_SIZE =  10
    }
    tools {
        go 'Go 1.20'
        terraform 'Terraform 1.0.10'
    }

    stages {
      
        
        stage('Install Dependencies & Build') {
            steps {
                sh 'rm -rf ~/.terraform.d/*'
                sh 'go mod tidy'
                sh 'go clean -i -r'
                echo 'Installing dependencies'
                sh 'go version'
                sh 'go mod download'
                sh 'go build -v .'
            }
	    }

        stage('Terraform Check') {
            steps {
                echo 'Check Terraform Installation'
                sh 'terraform -version'

            }
        }

        stage('Acceptance Tests') {

            environment {
                TF_ACC=1
                TF_LOG = "DEBUG"
            }

            steps {
            catchError(buildResult: 'SUCCESS', stageResult:'FAILURE'){
                echo 'Attempting to Run Acceptance Tests'
                withCredentials([usernamePassword(credentialsId: CREDENTIALS_ID, usernameVariable: 'GENESYSCLOUD_OAUTHCLIENT_ID',passwordVariable:'GENESYSCLOUD_OAUTHCLIENT_SECRET')])
                    {
                        echo 'Loading Genesys OAuth Credentials'
                        sh 'go test ./genesyscloud/... -run TestAcc -v -count=1 -timeout 120m -cover -coverprofile=coverageAcceptance.out'
                    }
                }
            }
        }

        stage('Generating Readable Coverage Report') {
            steps {
                sh 'go tool cover -html coverageAcceptance.out -o coverageAcceptance.html'
                sh 'go tool cover -html coverageUnit.out -o coverageUnit.html'


            }
        }


        stage('Uploading Coverage Report') {
            steps {
                archiveArtifacts artifacts: 'coverageAcceptance.html', allowEmptyArchive: true
                archiveArtifacts artifacts: 'coverageUnit.html', allowEmptyArchive: true
            }
        }


    } 
}
